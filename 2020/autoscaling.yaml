heat_template_version: rocky
description: AutoScaling Flask App
parameters:
  image:
    type: string
    description: Image used for servers
    default: CentOS_7_7_final_raw
  flavor:
    type: string
    description: flavor used by the web servers
  lb_network:
    type: string
    description: Network used by the lb server
  asg_network:
    type: string
    description: Network used by the server
  lb_subnet_id:
    type: string
    description: subnet on which the load balancer will be located
  asg_subnet_id:
    type: string
    description: subnet on which the asg instance will be located
resources:
  asg:
    type: OS::Heat::AutoScalingGroup
    properties:
      min_size: 1
      max_size: 3
      resource:
        type: lb_server.yaml
        properties:
          flavor: {get_param: flavor}
          image: {get_param: image}
          network: {get_param: asg_network}
          subnet: {get_param: asg_subnet_id}
          pool_id: {get_resource: pool}
          metadata: {"metering.server_group": {get_param: "OS::stack_id"}}
  web_server_scaleout_policy:
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: {get_resource: asg}
      cooldown: 5
      scaling_adjustment: 1
  web_server_scalein_policy:
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: {get_resource: asg}
      cooldown: 5
      scaling_adjustment: -1
  lb:
    type: OS::Octavia::LoadBalancer
    properties:
      vip_subnet: { get_param: lb_subnet_id }
  listener:
    type: OS::Octavia::Listener
    properties:
      loadbalancer: { get_resource: lb }
      protocol: HTTP
      protocol_port: 80
  pool:
    type: OS::Octavia::Pool
    properties:
      listener: { get_resource: listener }
      loadbalancer: { get_resource: lb }
      lb_algorithm: ROUND_ROBIN
      protocol: HTTP
      session_persistence:
        type: SOURCE_IP
  monitor:
    type: OS::Octavia::HealthMonitor
    properties:
      pool: { get_resource: pool }
      type: TCP
      delay: 5
      max_retries: 5
      timeout: 5

outputs:
  scale_out_url:
    description: >
      This URL is the webhook to scale out the autoscaling group.  You
      can invoke the scale-up operation by doing an HTTP POST to this
      URL; no body nor extra headers are needed.
    value: {get_attr: [web_server_scaleout_policy, alarm_url]}
  scale_in_url:
    description: >
      This URL is the webhook to scale in the autoscaling group.
      You can invoke the scale-down operation by doing an HTTP POST to
      this URL; no body nor extra headers are needed.
    value: {get_attr: [web_server_scalein_policy, alarm_url]}
  pool_ip_address:
    value: {get_attr: [lb, vip_address]}
    description: The IP address of the load balancing pool
